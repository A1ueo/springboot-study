spring.application.name=GDJ92_Maven
#spring.http.encoding.charset=UTF-8
#spring.http.encoding.enabled=true
#spring.http.encoding.force=true

######################################

server.port=80

######################################

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

###################################### MyBatis

# 유저네임
spring.datasource.hikari.username=user01
spring.datasource.hikari.password=user01
#spring.datasource.url=jdbc:mysql://localhost:3306/user01
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.url=jdbc:log4jdbc:mysql://localhost:3306/user01
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy

# mapper의 위치
# mybatis.mapper-locations=classpath:database/mappers/*Mapper.xml
# config의 위치
# mybatis.config-location=classpath:database/config/MybatisConfig.xml

# 중복된 클래스명이 있는 경우 x
mybatis.type-aliases-package=com.winter.app

# Snake case를 Camel case로 변환
mybatis.configuration.map-underscore-to-camel-case=true

######################################

## FileUpload

# MultiPart 객체의 사용 여부
spring.servlet.multipart.enabled=true

# 파일 하나당 최대 크기 설정
spring.servlet.multipart.max-file-size=5MB

# 총 파일의 최대 크기 설정
spring.servlet.multipart.max-request-size=25MB

### FilePath
# 업로드할 폴더의 공통 경로
app.upload=D:/upload/
app.url=/file/**

######################################

# 배포 후 변경 가능
board.notice=notice
board.qna=qna
board.member=member

######################################
# 상속을 받지 않는 서비스에도 사용 가능하게 하는 옵션

spring.aop.proxy-target-class=true

######################################
# 1. message properties의 위치 설정
spring.messages.basename=messages/message

# 2. Encoding 설정
spring.messages.encoding=UTF-8

# 3. key가 없는 경우 설정
spring.messages.use-code-as-default-message=true
# true: 키가 없을 경우 예외를 발생시키지 않고 키를 출력
# false: 예외 발생

# 변경 인식 시간
spring.messages.cache-duration=600

###################################### OAuth2
# Registration

## API Key
spring.security.oauth2.client.registration.kakao.client-id=

## Admin Key
spring.security.oauth2.client.registration.kakao.client-secret=

## Redirect URI
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost/login/oauth2/code/kakao

## Response Code
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code

## 회원 가입 시 (연결) 받는 추가 정보
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image

## 업체 정보
spring.security.oauth2.client.registration.kakao.client-name=kakao

## 인증 요청시 Spring 3.0이후부터 요청 메서드를 POST 대신 다른것을 사용
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

# Provider
## 로그인 화면 URL (인가 코드)
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
#?prompt=login

## 토큰 요청 URL
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token

## 사용자 정보
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

## 
spring.security.oauth2.client.provider.kakao.user-name-attribute=id









